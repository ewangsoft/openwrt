dist: xenial
os: linux
notifications:
  email: false
language: c
compiler: gcc
cache:
  ccache: true
  directories:
    - "${HOME}/dl"
    - "${HOME}/files"
    - "${HOME}/feeds"
git:
  depth: 3
  submodules: false
env:
  global:
    - PACKAGE=v2ray-core
    - DOWNLOAD_DIR=${HOME}/files
    - CONFIG_CCACHE=y
jobs:
  include:
    - &compile-staging # x86-64
      stage: compile
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/x86/64 SDK_NAME=-sdk-x86-64_
      before_install:
        - test -d "$DOWNLOAD_DIR" || mkdir -p "$DOWNLOAD_DIR"
        - cd "$DOWNLOAD_DIR"
        - |
          if ! ( wget -q -O - "${SDK_PATH}/sha256sums" | \
            grep -- "$SDK_NAME" > sha256sums.small 2>/dev/null ) ; then
            echo "Can not find ${SDK_NAME} file in sha256sums."
            exit 1
          fi
        - export SDK_FILE="$(cat sha256sums.small | cut -d' ' -f2 | sed 's/*//g')"
        - |
          if ! sha256sum -c ./sha256sums.small 2>/dev/null ; then
            wget -q -O "$SDK_FILE" "$SDK_PATH/$SDK_FILE"
            if ! sha256sum -c ./sha256sums.small 2>/dev/null ; then
              echo "SDK can not be verified!"
              exit 1
            fi
          fi
        - file "${DOWNLOAD_DIR}/${SDK_FILE}"
      install:
        - test -d "${HOME}/dl" || mkdir -p "${HOME}/dl"
        - test -d "${HOME}/feeds" || mkdir -p "${HOME}/feeds"
        - export SDK_HOME="$(mktemp -d)"
        - tar -Jxf "${DOWNLOAD_DIR}/${SDK_FILE}" -C "$SDK_HOME" --strip=1
        - cd "$SDK_HOME"
        - test -d "dl" && rm -rf dl || true
        - test -d "feeds" && rm -rf feeds || true
        - ln -s "${HOME}/dl/" dl
        - ln -s "${HOME}/feeds" feeds
        - cat feeds.conf.default >feeds.conf
        - sed -i 's#git.openwrt.org/openwrt/openwrt#github.com/openwrt/openwrt#' feeds.conf
        - sed -i 's#git.openwrt.org/feed/packages#github.com/openwrt/packages#' feeds.conf
        - sed -i 's#git.openwrt.org/project/luci#github.com/openwrt/luci#' feeds.conf
        - sed -i 's#git.openwrt.org/feed/telephony#github.com/openwrt/telephony#' feeds.conf
        - ln -s "$TRAVIS_BUILD_DIR" "package/${PACKAGE}"
      before_script:
        - cd "$SDK_HOME"
        - ./scripts/feeds update -a
        - |
          test -d ./feeds/packages/net/v2ray-core && \
            rm -rf ./feeds/packages/net/v2ray-core || true
        - |
          test -d ./feeds/packages/lang/golang && \
            rm -rf ./feeds/packages/lang/golang || true
        - |
          curl https://codeload.github.com/openwrt/packages/tar.gz/${OPENWRT_GOLANG_COMMIT:-master} | \
            tar -xz -C ./feeds/packages/lang --strip=2 packages-${OPENWRT_GOLANG_COMMIT:-master}/lang/golang
        - ./scripts/feeds install -a
        - make defconfig
      script:
        - cd "$SDK_HOME"
        - make package/${PACKAGE}/compile V=s
      after_success:
        - find "${SDK_HOME}/bin/" -type f -exec ls -lh {} \;
      before_deploy:
        - find "${SDK_HOME}/bin/" -name v2*.ipk -exec cp {} "$TRAVIS_BUILD_DIR" \;
        - ls -hl "$TRAVIS_BUILD_DIR" | grep .*\.ipk
      deploy:
        provider: releases
        file_glob: true
        file: "${TRAVIS_BUILD_DIR}/*.ipk"
        cleanup: false
        edge: true
        on:
          tags: true
          all_branches: true
        token: $GITHUB_TOKEN
    - <<: *compile-staging # i386_pentium
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/x86/legacy SDK_NAME=-sdk-x86-legacy_
    - <<: *compile-staging # i386_pentium4
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/x86/generic SDK_NAME=-sdk-x86-generic_
    - <<: *compile-staging # aarch64_cortex-a53
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/brcm2708/bcm2710 SDK_NAME=-sdk-brcm2708-bcm2710_
    - <<: *compile-staging # aarch64_cortex-a72
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/mvebu/cortexa72 SDK_NAME=-sdk-mvebu-cortexa72_
    - <<: *compile-staging # aarch64_generic
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=http://downloads.openwrt.org/snapshots/targets/layerscape/armv8_64b SDK_NAME=-sdk-layerscape-armv8_64b_
    #- <<: *compile-staging # arc_arc700
    #  if: tag IS present OR env(BUILD_ALL) = 1
    #  env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/arc770/generic SDK_NAME=-sdk-arc770-generic_
    #- <<: *compile-staging # arc_archs
    #  if: tag IS present OR env(BUILD_ALL) = 1
    #  env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/archs38/generic SDK_NAME=-sdk-archs38-generic_
    - <<: *compile-staging # arm_cortex-a9
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/bcm53xx/generic SDK_NAME=-sdk-bcm53xx-generic_
    - <<: *compile-staging # arm_cortex-a9_vfpv3
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/mvebu/cortexa9 SDK_NAME=-sdk-mvebu-cortexa9_
    - <<: *compile-staging # arm_arm1176jzf-s_vfp
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/brcm2708/bcm2708 SDK_NAME=-sdk-brcm2708-bcm2708_
    - <<: *compile-staging # arm_cortex-a7_neon-vfpv4
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/brcm2708/bcm2709 SDK_NAME=-sdk-brcm2708-bcm2709_
    - <<: *compile-staging # arm_cortex-a15_neon-vfpv4
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/ipq806x/generic SDK_NAME=-sdk-ipq806x-generic_
    - <<: *compile-staging # arm_arm926ej-s
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/at91/legacy SDK_NAME=-sdk-at91-legacy_
    - <<: *compile-staging # arm_cortex-a5_neon-vfpv4
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/at91/sama5 SDK_NAME=-sdk-at91-sama5_
    - <<: *compile-staging # arm_cortex-a8_vfpv3
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/sunxi/cortexa8 SDK_NAME=-sdk-sunxi-cortexa8_
    - <<: *compile-staging # arm_cortex-a9_neon
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/imx6/generic SDK_NAME=-sdk-imx6_
    - <<: *compile-staging # arm_fa526
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/gemini/generic SDK_NAME=-sdk-gemini_
    - <<: *compile-staging # arm_mpcore
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/oxnas/ox820 SDK_NAME=-sdk-oxnas-ox820_
    - <<: *compile-staging # arm_mpcore_vfp
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/cns3xxx/generic SDK_NAME=-sdk-cns3xxx_
    - <<: *compile-staging # arm_xscale
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/kirkwood/generic SDK_NAME=-sdk-kirkwood_
    #- <<: *compile-staging # armeb_xscale
    #  if: tag IS present OR env(BUILD_ALL) = 1
    #  env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/ixp4xx/generic SDK_NAME=-sdk-ixp4xx-generic_
    - <<: *compile-staging # mips_24kc
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/ar71xx/generic SDK_NAME=-sdk-ar71xx-generic_
    - <<: *compile-staging # mips_mips32
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/brcm63xx/generic SDK_NAME=-sdk-brcm63xx-generic_
    - <<: *compile-staging # mipsel_24kc
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/ramips/mt7620 SDK_NAME=-sdk-ramips-mt7620_
    - <<: *compile-staging # mipsel_24kc_24kf
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/pistachio/generic SDK_NAME=-sdk-pistachio_
    - <<: *compile-staging # mipsel_mips32
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/brcm47xx/generic SDK_NAME=-sdk-brcm47xx-generic_
    - <<: *compile-staging # mipsel_74kc
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/brcm47xx/mips74k SDK_NAME=-sdk-brcm47xx-mips74k_
    #- <<: *compile-staging # powerpc_464fp
    #  if: tag IS present OR env(BUILD_ALL) = 1
    #  env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/apm821xx/nand SDK_NAME=-sdk-apm821xx-nand_
    #- <<: *compile-staging # powerpc_8540
    #  if: tag IS present OR env(BUILD_ALL) = 1
    #  env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/mpc85xx/generic SDK_NAME=-sdk-mpc85xx-generic_
    - <<: *compile-staging # mips64_octeonplus
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=https://downloads.openwrt.org/snapshots/targets/octeon/generic SDK_NAME=-sdk-octeon_
    - <<: *compile-staging # mips64_octeon
      if: tag IS present OR env(BUILD_ALL) = 1
      env: SDK_PATH=http://downloads.openwrt.org/releases/18.06.5/targets/octeon/generic SDK_NAME=-sdk-18.06.5-octeon_
    - stage: trigger checked
      if: tag IS blank
      script:
        - |
          if [ -n "$TRIGGER_URL" ] ; then
            curl -X POST \
              -H "Content-Type: application/json; charset=utf-8" \
              -H "Authorization: Bearer $TRIGGER_TOKEN" \
              -d "{\"event\":\"checked\",\"repo_slug\":\"$TRAVIS_REPO_SLUG\",\"branch\":\"$TRAVIS_BRANCH\",\"tag\":\"$TRAVIS_TAG\"}" \
              "$TRIGGER_URL" || true
          fi
    - stage: trigger deploy
      if: tag IS present
      script:
        - |
          if [ -n "$TRIGGER_URL" ] ; then
            curl -X POST \
              -H "Content-Type: application/json; charset=utf-8" \
              -H "Authorization: Bearer $TRIGGER_TOKEN" \
              -d "{\"event\":\"release\",\"repo_slug\":\"$TRAVIS_REPO_SLUG\",\"branch\":\"$TRAVIS_BRANCH\",\"tag\":\"$TRAVIS_TAG\"}" \
              "$TRIGGER_URL" || true
          fi
